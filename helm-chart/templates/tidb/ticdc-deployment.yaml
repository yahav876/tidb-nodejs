{{- if .Values.tidb.enabled }}
{{- if .Values.tidb.ticdc.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tidb-data-pipeline.fullname" . }}-ticdc
  labels:
    {{- include "tidb-data-pipeline.componentLabels" (dict "component" "ticdc" "context" .) | nindent 4 }}
spec:
  replicas: {{ .Values.tidb.ticdc.replicaCount }}
  selector:
    matchLabels:
      {{- include "tidb-data-pipeline.componentSelectorLabels" (dict "component" "ticdc" "context" .) | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- include "tidb-data-pipeline.podAnnotations" . | nindent 8 }}
      labels:
        {{- include "tidb-data-pipeline.componentSelectorLabels" (dict "component" "ticdc" "context" .) | nindent 8 }}
    spec:
      {{- include "tidb-data-pipeline.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "tidb-data-pipeline.serviceAccountName" . }}
      securityContext:
        {{- include "tidb-data-pipeline.podSecurityContext" . | nindent 8 }}
      initContainers:
        - name: wait-for-tidb
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z {{ include "tidb-data-pipeline.fullname" . }}-tidb {{ .Values.tidb.tidb.service.port }}; do echo waiting for tidb; sleep 2; done;']
        - name: wait-for-kafka
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z {{ include "tidb-data-pipeline.fullname" . }}-kafka-0 {{ .Values.kafka.broker.service.port }}; do echo waiting for kafka; sleep 2; done;']
      containers:
        - name: ticdc
          securityContext:
            {{- include "tidb-data-pipeline.containerSecurityContext" . | nindent 12 }}
          image: "{{ .Values.tidb.ticdc.image.repository }}:{{ .Values.tidb.ticdc.image.tag }}"
          imagePullPolicy: {{ .Values.tidb.ticdc.image.pullPolicy }}
          command:
            - /cdc
            - server
            - --addr=0.0.0.0:8300
            - --advertise-addr=$(POD_NAME).{{ include "tidb-data-pipeline.fullname" . }}-ticdc:8300
            - --pd=http://{{ include "tidb-data-pipeline.fullname" . }}-pd:{{ .Values.tidb.pd.service.clientPort }}
            - --log-level={{ .Values.tidb.ticdc.config.logLevel }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: http
              containerPort: 8300
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: http
            {{- toYaml .Values.healthChecks.livenessProbe | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: http
            {{- toYaml .Values.healthChecks.readinessProbe | nindent 12 }}
          {{- include "tidb-data-pipeline.resources" .Values.tidb.ticdc | nindent 10 }}
      nodeSelector:
        {{- include "tidb-data-pipeline.nodeSelector" . | nindent 8 }}
      affinity:
        {{- include "tidb-data-pipeline.affinity" . | nindent 8 }}
      tolerations:
        {{- include "tidb-data-pipeline.tolerations" . | nindent 8 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "tidb-data-pipeline.fullname" . }}-ticdc
  labels:
    {{- include "tidb-data-pipeline.componentLabels" (dict "component" "ticdc" "context" .) | nindent 4 }}
spec:
  type: {{ .Values.tidb.ticdc.service.type }}
  ports:
    - port: {{ .Values.tidb.ticdc.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "tidb-data-pipeline.componentSelectorLabels" (dict "component" "ticdc" "context" .) | nindent 4 }}
---
{{- include "tidb-data-pipeline.podDisruptionBudget" (dict "component" "ticdc" "values" .Values.tidb.ticdc "context" .) }}
{{- end }}
{{- end }}