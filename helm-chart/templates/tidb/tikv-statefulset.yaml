{{- if .Values.tidb.enabled }}
{{- if .Values.tidb.tikv.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "tidb-data-pipeline.fullname" . }}-tikv
  labels:
    {{- include "tidb-data-pipeline.componentLabels" (dict "component" "tikv" "context" .) | nindent 4 }}
spec:
  serviceName: {{ include "tidb-data-pipeline.fullname" . }}-tikv-headless
  replicas: {{ .Values.tidb.tikv.replicaCount }}
  selector:
    matchLabels:
      {{- include "tidb-data-pipeline.componentSelectorLabels" (dict "component" "tikv" "context" .) | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- include "tidb-data-pipeline.podAnnotations" . | nindent 8 }}
      labels:
        {{- include "tidb-data-pipeline.componentSelectorLabels" (dict "component" "tikv" "context" .) | nindent 8 }}
    spec:
      {{- include "tidb-data-pipeline.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "tidb-data-pipeline.serviceAccountName" . }}
      securityContext:
        {{- include "tidb-data-pipeline.podSecurityContext" . | nindent 8 }}
      initContainers:
        - name: wait-for-pd
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z {{ include "tidb-data-pipeline.fullname" . }}-pd {{ .Values.tidb.pd.service.clientPort }}; do echo waiting for pd; sleep 2; done;']
      containers:
        - name: tikv
          securityContext:
            {{- include "tidb-data-pipeline.containerSecurityContext" . | nindent 12 }}
          image: "{{ .Values.tidb.tikv.image.repository }}:{{ .Values.tidb.tikv.image.tag }}"
          imagePullPolicy: {{ .Values.tidb.tikv.image.pullPolicy }}
          command:
            - /tikv-server
            - --addr=0.0.0.0:20160
            - --advertise-addr=$(POD_NAME).{{ include "tidb-data-pipeline.fullname" . }}-tikv-headless:20160
            - --data-dir=/data/tikv
            - --pd={{ include "tidb-data-pipeline.fullname" . }}-pd:{{ .Values.tidb.pd.service.clientPort }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: server
              containerPort: 20160
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: server
            {{- toYaml .Values.healthChecks.livenessProbe | nindent 12 }}
          readinessProbe:
            tcpSocket:
              port: server
            {{- toYaml .Values.healthChecks.readinessProbe | nindent 12 }}
          {{- include "tidb-data-pipeline.resources" .Values.tidb.tikv | nindent 10 }}
          volumeMounts:
            - name: data
              mountPath: /data
      nodeSelector:
        {{- include "tidb-data-pipeline.nodeSelector" . | nindent 8 }}
      affinity:
        {{- include "tidb-data-pipeline.affinity" . | nindent 8 }}
      tolerations:
        {{- include "tidb-data-pipeline.tolerations" . | nindent 8 }}
  {{- if .Values.tidb.tikv.persistence.enabled }}
  volumeClaimTemplates:
    {{- include "tidb-data-pipeline.volumeClaimTemplate" (dict "name" "data" "size" .Values.tidb.tikv.persistence.size "storageClass" .Values.global.persistence.storageClass) | nindent 4 }}
  {{- else }}
      volumes:
        - name: data
          emptyDir: {}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "tidb-data-pipeline.fullname" . }}-tikv-headless
  labels:
    {{- include "tidb-data-pipeline.componentLabels" (dict "component" "tikv" "context" .) | nindent 4 }}
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: {{ .Values.tidb.tikv.service.port }}
      targetPort: server
      protocol: TCP
      name: server
  selector:
    {{- include "tidb-data-pipeline.componentSelectorLabels" (dict "component" "tikv" "context" .) | nindent 4 }}
---
{{- include "tidb-data-pipeline.podDisruptionBudget" (dict "component" "tikv" "values" .Values.tidb.tikv "context" .) }}
{{- end }}
{{- end }}