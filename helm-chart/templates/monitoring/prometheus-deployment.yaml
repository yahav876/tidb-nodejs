{{- if .Values.prometheus.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tidb-data-pipeline.fullname" . }}-prometheus
  labels:
    {{- include "tidb-data-pipeline.componentLabels" (dict "component" "prometheus" "context" .) | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "tidb-data-pipeline.componentSelectorLabels" (dict "component" "prometheus" "context" .) | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/monitoring/prometheus-configmap.yaml") . | sha256sum }}
        {{- include "tidb-data-pipeline.podAnnotations" . | nindent 8 }}
      labels:
        {{- include "tidb-data-pipeline.componentSelectorLabels" (dict "component" "prometheus" "context" .) | nindent 8 }}
    spec:
      {{- include "tidb-data-pipeline.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "tidb-data-pipeline.serviceAccountName" . }}
      securityContext:
        fsGroup: 65534
        supplementalGroups: [65534]
        runAsNonRoot: true
        runAsUser: 65534
      initContainers:
        - name: init-prometheus-data
          image: busybox:1.36
          command: ['sh', '-c', 'chown -R 65534:65534 /prometheus']
          securityContext:
            runAsUser: 0
            runAsNonRoot: false
          volumeMounts:
            - name: data
              mountPath: /prometheus
      containers:
        - name: prometheus
          securityContext:
            runAsUser: 65534
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
          image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
          imagePullPolicy: {{ .Values.prometheus.image.pullPolicy }}
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention.time={{ .Values.prometheus.config.retention }}
            - --web.enable-lifecycle
            - --web.enable-admin-api
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            {{- toYaml .Values.healthChecks.livenessProbe | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            {{- toYaml .Values.healthChecks.readinessProbe | nindent 12 }}
          {{- include "tidb-data-pipeline.resources" .Values.prometheus | nindent 10 }}
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
            - name: data
              mountPath: /prometheus
      nodeSelector:
        {{- include "tidb-data-pipeline.nodeSelector" . | nindent 8 }}
      affinity:
        {{- include "tidb-data-pipeline.affinity" . | nindent 8 }}
      tolerations:
        {{- include "tidb-data-pipeline.tolerations" . | nindent 8 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "tidb-data-pipeline.fullname" . }}-prometheus-config
        {{- if .Values.prometheus.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "tidb-data-pipeline.fullname" . }}-prometheus
        {{- else }}
        - name: data
          emptyDir: {}
        {{- end }}
---
{{- if .Values.prometheus.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "tidb-data-pipeline.fullname" . }}-prometheus
  labels:
    {{- include "tidb-data-pipeline.componentLabels" (dict "component" "prometheus" "context" .) | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  {{- include "tidb-data-pipeline.storageClass" . | nindent 2 }}
  resources:
    requests:
      storage: {{ .Values.prometheus.persistence.size }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "tidb-data-pipeline.fullname" . }}-prometheus
  labels:
    {{- include "tidb-data-pipeline.componentLabels" (dict "component" "prometheus" "context" .) | nindent 4 }}
spec:
  type: {{ .Values.prometheus.service.type }}
  ports:
    - port: {{ .Values.prometheus.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "tidb-data-pipeline.componentSelectorLabels" (dict "component" "prometheus" "context" .) | nindent 4 }}
---
{{- include "tidb-data-pipeline.podDisruptionBudget" (dict "component" "prometheus" "values" .Values.prometheus "context" .) }}
{{- end }}