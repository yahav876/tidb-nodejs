{{- if .Values.elasticsearch.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "tidb-data-pipeline.fullname" . }}-elasticsearch
  labels:
    {{- include "tidb-data-pipeline.componentLabels" (dict "component" "elasticsearch" "context" .) | nindent 4 }}
spec:
  serviceName: {{ include "tidb-data-pipeline.fullname" . }}-elasticsearch-headless
  replicas: {{ .Values.elasticsearch.replicaCount }}
  selector:
    matchLabels:
      {{- include "tidb-data-pipeline.componentSelectorLabels" (dict "component" "elasticsearch" "context" .) | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- include "tidb-data-pipeline.podAnnotations" . | nindent 8 }}
      labels:
        {{- include "tidb-data-pipeline.componentSelectorLabels" (dict "component" "elasticsearch" "context" .) | nindent 8 }}
    spec:
      {{- include "tidb-data-pipeline.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "tidb-data-pipeline.serviceAccountName" . }}
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      initContainers:
        - name: fix-permissions
          image: busybox:1.36
          command: ['sh', '-c', 'mkdir -p /usr/share/elasticsearch/data && chmod 775 /usr/share/elasticsearch/data']
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
      containers:
        - name: elasticsearch
          securityContext:
            runAsUser: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          image: "{{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}"
          imagePullPolicy: {{ .Values.elasticsearch.image.pullPolicy }}
          env:
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ES_JAVA_OPTS
              value: {{ .Values.elasticsearch.javaOpts }}
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: transport
              containerPort: 9300
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_cluster/health
              port: http
            {{- toYaml .Values.healthChecks.livenessProbe | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: http
            {{- toYaml .Values.healthChecks.readinessProbe | nindent 12 }}
          {{- include "tidb-data-pipeline.resources" .Values.elasticsearch | nindent 10 }}
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
            - name: config
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
      nodeSelector:
        {{- include "tidb-data-pipeline.nodeSelector" . | nindent 8 }}
      affinity:
        {{- include "tidb-data-pipeline.affinity" . | nindent 8 }}
      tolerations:
        {{- include "tidb-data-pipeline.tolerations" . | nindent 8 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "tidb-data-pipeline.fullname" . }}-elasticsearch-config
  {{- if .Values.elasticsearch.persistence.enabled }}
  volumeClaimTemplates:
    {{- include "tidb-data-pipeline.volumeClaimTemplate" (dict "name" "data" "size" .Values.elasticsearch.persistence.size "storageClass" .Values.global.persistence.storageClass) | nindent 4 }}
  {{- else }}
      volumes:
        - name: data
          emptyDir: {}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "tidb-data-pipeline.fullname" . }}-elasticsearch
  labels:
    {{- include "tidb-data-pipeline.componentLabels" (dict "component" "elasticsearch" "context" .) | nindent 4 }}
spec:
  type: {{ .Values.elasticsearch.service.type }}
  ports:
    - port: {{ .Values.elasticsearch.service.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "tidb-data-pipeline.componentSelectorLabels" (dict "component" "elasticsearch" "context" .) | nindent 4 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "tidb-data-pipeline.fullname" . }}-elasticsearch-headless
  labels:
    {{- include "tidb-data-pipeline.componentLabels" (dict "component" "elasticsearch" "context" .) | nindent 4 }}
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: {{ .Values.elasticsearch.service.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ .Values.elasticsearch.service.transportPort }}
      targetPort: transport
      protocol: TCP
      name: transport
  selector:
    {{- include "tidb-data-pipeline.componentSelectorLabels" (dict "component" "elasticsearch" "context" .) | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "tidb-data-pipeline.fullname" . }}-elasticsearch-config
  labels:
    {{- include "tidb-data-pipeline.componentLabels" (dict "component" "elasticsearch" "context" .) | nindent 4 }}
data:
  elasticsearch.yml: |
    cluster.name: {{ .Values.elasticsearch.clusterName }}
    network.host: 0.0.0.0
    xpack.security.enabled: {{ .Values.elasticsearch.config.xpack.security.enabled }}
    {{- if eq (int .Values.elasticsearch.replicaCount) 1 }}
    discovery.type: single-node
    {{- else }}
    discovery.seed_hosts: {{ include "tidb-data-pipeline.fullname" . }}-elasticsearch-headless
    cluster.initial_master_nodes:
      {{- range $i := until (int $.Values.elasticsearch.replicaCount) }}
      - {{ include "tidb-data-pipeline.fullname" $ }}-elasticsearch-{{ $i }}
      {{- end }}
    {{- end }}
    node.roles: {{ toJson .Values.elasticsearch.config.node.roles }}
---
{{- include "tidb-data-pipeline.podDisruptionBudget" (dict "component" "elasticsearch" "values" .Values.elasticsearch "context" .) }}
{{- end }}