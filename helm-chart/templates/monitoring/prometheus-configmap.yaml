{{- if .Values.prometheus.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "tidb-data-pipeline.fullname" . }}-prometheus-config
  labels:
    {{- include "tidb-data-pipeline.componentLabels" (dict "component" "prometheus" "context" .) | nindent 4 }}
data:
  prometheus.yml: |
    global:
      scrape_interval: {{ .Values.prometheus.config.global.scrape_interval }}
      evaluation_interval: {{ .Values.prometheus.config.global.evaluation_interval }}
      scrape_timeout: {{ .Values.prometheus.config.global.scrape_timeout }}

    {{- if .Values.monitoring.alerts.enabled }}
    alerting:
      alertmanagers:
        - static_configs:
            - targets: []

    rule_files:
      - /etc/prometheus/rules.yml
    {{- end }}

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'tidb'
        static_configs:
          - targets:
            - '{{ include "tidb-data-pipeline.fullname" . }}-tidb:{{ .Values.tidb.tidb.service.statusPort }}'
        metrics_path: /metrics

      - job_name: 'pd'
        static_configs:
          - targets:
            {{- range $i := until (int $.Values.tidb.pd.replicaCount) }}
            - '{{ include "tidb-data-pipeline.fullname" $ }}-pd-{{ $i }}.{{ include "tidb-data-pipeline.fullname" $ }}-pd-headless:2379'
            {{- end }}
        metrics_path: /metrics

      - job_name: 'tikv'
        static_configs:
          - targets:
            {{- range $i := until (int $.Values.tidb.tikv.replicaCount) }}
            - '{{ include "tidb-data-pipeline.fullname" $ }}-tikv-{{ $i }}.{{ include "tidb-data-pipeline.fullname" $ }}-tikv-headless:20180'
            {{- end }}
        metrics_path: /metrics

      - job_name: 'ticdc'
        static_configs:
          - targets:
            - '{{ include "tidb-data-pipeline.fullname" . }}-ticdc:{{ .Values.tidb.ticdc.service.port }}'
        metrics_path: /api/v1/metrics

      - job_name: 'consumer'
        static_configs:
          - targets:
            - '{{ include "tidb-data-pipeline.fullname" . }}-consumer:{{ .Values.consumer.service.port }}'
        metrics_path: /metrics

      - job_name: 'elasticsearch'
        static_configs:
          - targets:
            {{- range $i := until (int $.Values.elasticsearch.replicaCount) }}
            - '{{ include "tidb-data-pipeline.fullname" $ }}-elasticsearch-{{ $i }}.{{ include "tidb-data-pipeline.fullname" $ }}-elasticsearch-headless:{{ $.Values.elasticsearch.service.httpPort }}'
            {{- end }}
        metrics_path: /_prometheus/metrics

      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

  {{- if .Values.monitoring.alerts.enabled }}
  rules.yml: |
    groups:
      - name: tidb_alerts
        interval: 30s
        rules:
          {{- range .Values.monitoring.alerts.rules }}
          - alert: {{ .name }}
            expr: {{ .expr }}
            for: {{ .duration }}
            labels:
              severity: {{ .severity }}
            annotations:
              description: {{ .description | quote }}
          {{- end }}
  {{- end }}
{{- end }}