apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tidb-consumer.fullname" . }}
  labels:
    {{- include "tidb-consumer.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "tidb-consumer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "tidb-consumer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tidb-consumer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-kafka
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z {{ .Values.config.kafka.brokers | replace ":" " " }}; do echo "Waiting for Kafka..."; sleep 2; done;']
        - name: wait-for-elasticsearch
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z {{ .Values.config.elasticsearch.host }} {{ .Values.config.elasticsearch.port }}; do echo "Waiting for Elasticsearch..."; sleep 2; done;']
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NODE_ENV
              value: "production"
            - name: KAFKA_BROKERS
              value: {{ .Values.config.kafka.brokers | quote }}
            - name: KAFKA_TOPIC
              value: {{ .Values.config.kafka.topic | quote }}
            - name: KAFKA_CONSUMER_GROUP
              value: {{ .Values.config.kafka.consumerGroup | quote }}
            - name: KAFKA_SESSION_TIMEOUT
              value: {{ .Values.config.kafka.sessionTimeout | quote }}
            - name: KAFKA_HEARTBEAT_INTERVAL
              value: {{ .Values.config.kafka.heartbeatInterval | quote }}
            - name: KAFKA_MAX_POLL_RECORDS
              value: {{ .Values.config.kafka.maxPollRecords | quote }}
            - name: ES_HOST
              value: {{ .Values.config.elasticsearch.host | quote }}
            - name: ES_PORT
              value: {{ .Values.config.elasticsearch.port | quote }}
            - name: ES_PROTOCOL
              value: {{ .Values.config.elasticsearch.protocol | quote }}
            - name: ES_INDEX
              value: {{ .Values.config.elasticsearch.index | quote }}
            - name: ES_USERNAME
              value: {{ .Values.config.elasticsearch.username | quote }}
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "tidb-consumer.fullname" . }}-elasticsearch
                  key: password
            - name: BATCH_SIZE
              value: {{ .Values.config.processing.batchSize | quote }}
            - name: FLUSH_INTERVAL
              value: {{ .Values.config.processing.flushInterval | quote }}
            - name: MAX_RETRIES
              value: {{ .Values.config.processing.maxRetries | quote }}
            - name: RETRY_DELAY
              value: {{ .Values.config.processing.retryDelay | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.config.logging.level | quote }}
            - name: LOG_FORMAT
              value: {{ .Values.config.logging.format | quote }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: config
          configMap:
            name: {{ include "tidb-consumer.fullname" . }}
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}